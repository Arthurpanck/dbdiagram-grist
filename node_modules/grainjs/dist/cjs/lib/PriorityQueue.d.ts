/**
 * A simple and fast priority queue with a limited interface to push, pop, peek, and get size. It
 * is essentially equivalent to both npm modules 'fastpriorityqueue' and 'qheap', but is in
 * TypeScript and is a bit cleaner and simpler.
 *
 * It is constructed with a function that returns which of two items is "prior"; the pop() method
 * returns the most-prior element.
 */
export declare type IsPriorFunc<T> = (a: T, b: T) => boolean;
export declare class PriorityQueue<T> {
    private _isPrior;
    private _items;
    constructor(_isPrior: IsPriorFunc<T>);
    get size(): number;
    push(item: T): void;
    peek(): T | undefined;
    pop(): T | undefined;
}
